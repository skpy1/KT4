{"version":3,"sources":["store.js","App.js","index.js"],"names":["cartSlice","createSlice","name","initialState","id","title","count","reducers","increment","state","action","item","find","i","payload","decrement","index","indexOf","splice","addItem","push","Date","now","actions","configureStore","reducer","cart","App","cartItems","useSelector","dispatch","useDispatch","React","createElement","className","onClick","handleAdd","prompt","trim","map","key","disabled","ReactDOM","render","StrictMode","Provider","store","document","getElementById"],"mappings":"iOAEA,MAAMA,EAAYC,YAAY,CAC1BC,KAAM,OACNC,aAAc,CACV,CAACC,GAAI,EAAGC,MAAO,yDAAaC,MAAO,GACnC,CAACF,GAAI,EAAGC,MAAO,6CAAWC,MAAO,GACjC,CAACF,GAAI,EAAGC,MAAO,6CAAWC,MAAO,GACjC,CAACF,GAAI,EAAGC,MAAO,6CAAWC,MAAO,IAErCC,SAAU,CACNC,UAAWA,CAACC,EAAOC,KACf,MAAMC,EAAOF,EAAMG,KAAKC,GAAKA,EAAET,KAAOM,EAAOI,SACzCH,GAAQA,EAAKL,MAAQ,IAAIK,EAAKL,SAEtCS,UAAWA,CAACN,EAAOC,KACf,MAAMC,EAAOF,EAAMG,KAAKC,GAAKA,EAAET,KAAOM,EAAOI,SAC7C,GAAIH,IACAA,EAAKL,QACDK,EAAKL,MAAQ,GAAG,CAChB,MAAMU,EAAQP,EAAMQ,QAAQN,GAC5BF,EAAMS,OAAOF,EAAO,KAIhCG,QAASA,CAACV,EAAOC,KACbD,EAAMW,KAAK,CACPhB,GAAIiB,KAAKC,MACTjB,MAAOK,EAAOI,QACdR,MAAO,SAMV,UAAEE,EAAS,UAAEO,EAAS,QAAEI,GAAYnB,EAAUuB,QAC5CC,kBAAe,CAC1BC,QAAS,CACLC,KAAM1B,EAAUyB,W,MCeTE,MAhDHA,KACR,MAAMC,EAAYC,YAAYpB,GAASA,EAAMiB,MACvCI,EAAWC,cASjB,OACIC,IAAAC,cAAA,OAAKC,UAAU,aACXF,IAAAC,cAAA,MAAIC,UAAU,UAAS,8CACvBF,IAAAC,cAAA,UAAQE,QAVEC,KACd,MAAM/B,EAAQgC,OAAO,qIACjBhC,GAASA,EAAMiC,QACfR,EAASX,EAAQd,EAAMiC,UAOKJ,UAAU,aAAY,mFAIlDF,IAAAC,cAAA,MAAIC,UAAU,YACTN,EAAUW,IAAI5B,GACXqB,IAAAC,cAAA,MAAIO,IAAK7B,EAAKP,GAAI8B,UAAU,YACxBF,IAAAC,cAAA,QAAMC,UAAU,aAAavB,EAAKN,OAElC2B,IAAAC,cAAA,OAAKC,UAAU,YACXF,IAAAC,cAAA,UACIE,QAASA,IAAML,EAASf,EAAUJ,EAAKP,KACvC8B,UAAU,UACb,KAIDF,IAAAC,cAAA,QAAMC,UAAU,SAASvB,EAAKL,OAE9B0B,IAAAC,cAAA,UACIE,QAASA,IAAML,EAAStB,EAAUG,EAAKP,KACvC8B,UAAU,SACVO,SAAU9B,EAAKL,OAAS,IAC3B,WCpC7BoC,IAASC,OACLX,IAAAC,cAACD,IAAMY,WAAU,KACbZ,IAAAC,cAACY,IAAQ,CAACC,MAAOA,GACbd,IAAAC,cAACN,EAAG,QAGZoB,SAASC,eAAe,W","file":"static/js/main.799e38ff.chunk.js","sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit';\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState: [\n        {id: 1, title: 'Велосипед', count: 5},\n        {id: 2, title: 'Самокат', count: 4},\n        {id: 3, title: 'Гантели', count: 7},\n        {id: 4, title: 'Ракетки', count: 1}\n    ],\n    reducers: {\n        increment: (state, action) => {\n            const item = state.find(i => i.id === action.payload);\n            if (item && item.count < 25) item.count++;\n        },\n        decrement: (state, action) => {\n            const item = state.find(i => i.id === action.payload);\n            if (item) {\n                item.count--;\n                if (item.count < 1) {\n                    const index = state.indexOf(item);\n                    state.splice(index, 1);\n                }\n            }\n        },\n        addItem: (state, action) => {\n            state.push({\n                id: Date.now(),\n                title: action.payload,\n                count: 1\n            });\n        }\n    }\n});\n\nexport const { increment, decrement, addItem } = cartSlice.actions;\nexport default configureStore({\n    reducer: {\n        cart: cartSlice.reducer\n    }\n});","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { increment, decrement, addItem } from './store';\nimport './App.css';\n\nconst App = () => {\n    const cartItems = useSelector(state => state.cart);\n    const dispatch = useDispatch();\n\n    const handleAdd = () => {\n        const title = prompt('Введите название товара:');\n        if (title && title.trim()) {\n            dispatch(addItem(title.trim()));\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <h1 className=\"header\">Корзина</h1>\n            <button onClick={handleAdd} className=\"addButton\">\n                Добавить товар\n            </button>\n\n            <ul className=\"cartList\">\n                {cartItems.map(item => (\n                    <li key={item.id} className=\"cartItem\">\n                        <span className=\"itemTitle\">{item.title}</span>\n\n                        <div className=\"controls\">\n                            <button\n                                onClick={() => dispatch(decrement(item.id))}\n                                className=\"button\"\n                            >\n                                -\n                            </button>\n\n                            <span className=\"count\">{item.count}</span>\n\n                            <button\n                                onClick={() => dispatch(increment(item.id))}\n                                className=\"button\"\n                                disabled={item.count >= 25}\n                            >\n                                +\n                            </button>\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}